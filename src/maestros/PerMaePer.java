/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package maestros;

import java.io.File;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.xml.parsers.DocumentBuilder;
import javax.xml.parsers.DocumentBuilderFactory;
import javax.xml.transform.Result;
import javax.xml.transform.Source;
import javax.xml.transform.Transformer;
import javax.xml.transform.TransformerFactory;
import javax.xml.transform.dom.DOMSource;
import javax.xml.transform.stream.StreamResult;
import org.w3c.dom.DOMImplementation;
import org.w3c.dom.Document;
import org.w3c.dom.Element;
import org.w3c.dom.Node;
import org.w3c.dom.NodeList;
import org.w3c.dom.Text;

/**
 *
 * @author prof_tes_a
 */
public class PerMaePer extends javax.swing.JInternalFrame
{
    
    private PerMaePer_01 objMaePer_01;

    /**
     * Creates new form PerMaePer
     */
    public PerMaePer()
    {
        initComponents();
        cargarTiposPerfume();
        objMaePer_01=new PerMaePer_01(JOptionPane.getFrameForComponent(this), true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        bgrFra = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txtNom = new javax.swing.JTextField();
        txtMar = new javax.swing.JTextField();
        butMar = new javax.swing.JButton();
        cboTip = new javax.swing.JComboBox<>();
        optFraDam = new javax.swing.JRadioButton();
        optFraCab = new javax.swing.JRadioButton();
        optFraUni = new javax.swing.JRadioButton();
        chkTam1Oz = new javax.swing.JCheckBox();
        chkTam2Oz = new javax.swing.JCheckBox();
        chkTam3Oz = new javax.swing.JCheckBox();
        jScrollPane1 = new javax.swing.JScrollPane();
        txaObs = new javax.swing.JTextArea();
        butGua = new javax.swing.JButton();
        butAbr = new javax.swing.JButton();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Perfume");

        jLabel1.setText("Nombre:");

        jLabel2.setText("Marca:");

        jLabel3.setText("Tipo:");

        jLabel4.setText("Fragancia:");

        jLabel5.setText("Tama√±o:");

        jLabel6.setText("Observaciones:");

        butMar.setText("...");
        butMar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                butMarActionPerformed(evt);
            }
        });

        cboTip.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        bgrFra.add(optFraDam);
        optFraDam.setSelected(true);
        optFraDam.setText("Damas");

        bgrFra.add(optFraCab);
        optFraCab.setText("Caballeros");

        bgrFra.add(optFraUni);
        optFraUni.setText("Unisex");

        chkTam1Oz.setText("1 Oz");

        chkTam2Oz.setText("2 Oz");

        chkTam3Oz.setText("3.4 Oz");

        txaObs.setColumns(20);
        txaObs.setRows(5);
        jScrollPane1.setViewportView(txaObs);

        butGua.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/guardar.png"))); // NOI18N
        butGua.setText("Guardar");
        butGua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                butGuaActionPerformed(evt);
            }
        });

        butAbr.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/abrir.gif"))); // NOI18N
        butAbr.setText("Abrir");
        butAbr.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                butAbrActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtNom, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cboTip, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtMar, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(optFraDam, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(optFraCab, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(optFraUni, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(butMar, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(chkTam1Oz, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(chkTam2Oz, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(chkTam3Oz, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jScrollPane1)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(butGua, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(butAbr, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtNom, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtMar, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(butMar, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cboTip, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(optFraDam, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(optFraCab, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(optFraUni, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(chkTam1Oz, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(chkTam2Oz, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(chkTam3Oz, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(butAbr, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(butGua, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        setBounds(0, 0, 500, 350);
    }// </editor-fold>//GEN-END:initComponents

    private void butMarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_butMarActionPerformed
        //PerMaePer_01 objMaePer_01=new PerMaePer_01(JOptionPane.getFrameForComponent(this), true);
        objMaePer_01.setVisible(true);
        if (objMaePer_01.isClickAceptar())
            txtMar.setText(objMaePer_01.getMarcaSeleccionada());
    }//GEN-LAST:event_butMarActionPerformed

    private void butGuaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_butGuaActionPerformed
        guardarPerfume();
    }//GEN-LAST:event_butGuaActionPerformed

    private void butAbrActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_butAbrActionPerformed
        abrirPerfume();
    }//GEN-LAST:event_butAbrActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup bgrFra;
    private javax.swing.JButton butAbr;
    private javax.swing.JButton butGua;
    private javax.swing.JButton butMar;
    private javax.swing.JComboBox<String> cboTip;
    private javax.swing.JCheckBox chkTam1Oz;
    private javax.swing.JCheckBox chkTam2Oz;
    private javax.swing.JCheckBox chkTam3Oz;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JRadioButton optFraCab;
    private javax.swing.JRadioButton optFraDam;
    private javax.swing.JRadioButton optFraUni;
    private javax.swing.JTextArea txaObs;
    private javax.swing.JTextField txtMar;
    private javax.swing.JTextField txtNom;
    // End of variables declaration//GEN-END:variables

    private boolean cargarTiposPerfume()
    {
        boolean blnRes=true;
        try
        {
            String strCon=""; //Contenido del archivo.
            java.io.FileReader objFilRea=new java.io.FileReader("PerTipoPerfume.txt");
            java.io.BufferedReader objBufRea=new java.io.BufferedReader(objFilRea);
            String strLin;
            cboTip.removeAllItems();
            while((strLin=objBufRea.readLine())!=null)
            {
                cboTip.addItem(strLin);
            }
            objBufRea.close();
        }
        catch(java.io.FileNotFoundException e)
        {
            JOptionPane.showMessageDialog(this, "Excepci√≥n: " + e.toString(), "Sistema TES", JOptionPane.ERROR_MESSAGE);
            blnRes=false;
        }
        catch(java.io.IOException e)
        {
            JOptionPane.showMessageDialog(this, "Excepci√≥n: " + e.toString(), "Sistema TES", JOptionPane.ERROR_MESSAGE);
            blnRes=false;
        }
        return blnRes;
    }

    private boolean guardarPerfume()
    {
        boolean blnRes=true;
        try
        {
            String strArc;
            if (this.getTitle().equals("Perfume"))
            {
                JFileChooser objFilCho=new JFileChooser();
                objFilCho.setDialogTitle("Guardar");
                objFilCho.setFileSelectionMode(JFileChooser.FILES_ONLY);
                objFilCho.setCurrentDirectory(new File("C:\\"));
                //Filtrado (Opci√≥n 1):
                FileNameExtensionFilter objFilNamExt=new FileNameExtensionFilter("Archivos XML", "xml");
                objFilCho.setFileFilter(objFilNamExt);
                //Filtrado (Opci√≥n 2):
    //            objFilCho.addChoosableFileFilter(new FileNameExtensionFilter("Archivos de texto", "txt"));
    //            objFilCho.addChoosableFileFilter(new FileNameExtensionFilter("Archivos java", "java"));
    //            objFilCho.addChoosableFileFilter(new FileNameExtensionFilter("Archivos php", "php", "php4", "phtml"));
                if (objFilCho.showSaveDialog(this)==JFileChooser.APPROVE_OPTION)
                {
                    strArc=objFilCho.getSelectedFile().getPath();
                    //Si no tiene la extensi√≥n "txt" agregarsela.
                    if (!strArc.toLowerCase().endsWith(".xml"))
                        strArc+=".xml";
                    if (guardarArcXML(strArc))
                        this.setTitle(strArc);
        //            System.out.println("Directorio seleccionado: " + strArc);
        //            System.out.println("Texto: " + ((MenArcBloNot)dskGen.getSelectedFrame()).txaPag.getText());
                }
                else
                {
                    System.out.println("El usuario cancel√≥");
                }
            }
            else
                guardarArcXML(this.getTitle());
        }
        catch(Exception e)
        {
            System.out.println("Excepci√≥n: " + e.toString());
            blnRes=false;
        }
        return blnRes;
    }
    
    private boolean guardarArcXML(String strNomArc)
    {
        boolean blnRes=true;
        try
        {
            DocumentBuilderFactory obDocBuiFac=DocumentBuilderFactory.newInstance();
            DocumentBuilder objDocBui=obDocBuiFac.newDocumentBuilder();
            DOMImplementation objDomImp=objDocBui.getDOMImplementation();
            Document objDoc=objDomImp.createDocument(null, "xml", null);
            objDoc.setXmlVersion("1.0");
            
            //Crear el nodo ra√≠z.
            Element objNodRai=objDoc.createElement("Perfume");
            //Crear los nodos hijos.
            Element objNodNom=objDoc.createElement("Nombre");
            Element objNodMar=objDoc.createElement("Marca");
            Element objNodTip=objDoc.createElement("Tipo");
            Element objNodFra=objDoc.createElement("Fragancia");
            Element objNodTam=objDoc.createElement("Tamano");
            Element objNodObs=objDoc.createElement("Observaciones");
            //Asignar el valor a los nodos hijos.
            Text objTexNom=objDoc.createTextNode(txtNom.getText());
            Text objTexMar=objDoc.createTextNode(txtMar.getText());
            Text objTexTip=objDoc.createTextNode(cboTip.getSelectedItem().toString());
            String strFra="";
            if (optFraDam.isSelected())
            {
                strFra="Damas";
            }
            else if (optFraCab.isSelected())
            {
                strFra="Caballeros";
            }
            else
            {
                strFra="Unisex";
            }
            Text objTexFra=objDoc.createTextNode(strFra);
            String strTam="";
            if (chkTam1Oz.isSelected())
            {
                strTam="1Oz";
            }
            if (chkTam2Oz.isSelected())
            {
                strTam+=(strTam.equals("")?"2Oz":", 2Oz");
            }
            if (chkTam3Oz.isSelected())
            {
                strTam+=(strTam.equals("")?"3Oz":", 3Oz");
            }
            Text objTexTam=objDoc.createTextNode(strTam);
            Text objTexObs=objDoc.createTextNode(txaObs.getText());
            
            //Agregar los nodos al documento.
            objDoc.getDocumentElement().appendChild(objNodRai);
            objNodRai.appendChild(objNodNom);
            objNodRai.appendChild(objNodMar);
            objNodRai.appendChild(objNodTip);
            objNodRai.appendChild(objNodFra);
            objNodRai.appendChild(objNodTam);
            objNodRai.appendChild(objNodObs);
            objNodNom.appendChild(objTexNom);
            objNodMar.appendChild(objTexMar);
            objNodTip.appendChild(objTexTip);
            objNodFra.appendChild(objTexFra);
            objNodTam.appendChild(objTexTam);
            objNodObs.appendChild(objTexObs);
            Source objSou=new DOMSource(objDoc);
            Result objRes=new StreamResult(new java.io.File(strNomArc));
            Result objResCon=new StreamResult(System.out);
            Transformer objTra=TransformerFactory.newInstance().newTransformer();
            objTra.transform(objSou, objRes);
            objTra.transform(objSou, objResCon);
        }
        catch(Exception e)
        {
            System.out.println("Excepci√≥n: " + e.toString());
            blnRes=false;
        }
        return blnRes;
    }
    
    private boolean abrirPerfume()
    {
        boolean blnRes=true;
        try
        {
            String strArc;
            JFileChooser objFilCho=new JFileChooser();
            objFilCho.setDialogTitle("Abrir");
            objFilCho.setFileSelectionMode(JFileChooser.FILES_ONLY);
            objFilCho.setCurrentDirectory(new File("C:\\"));
            //Filtrado (Opci√≥n 1):
            FileNameExtensionFilter objFilNamExt=new FileNameExtensionFilter("Archivos XML", "xml");
            objFilCho.setFileFilter(objFilNamExt);
            //Filtrado (Opci√≥n 2):
    //        objFilCho.addChoosableFileFilter(new FileNameExtensionFilter("Archivos de texto", "txt"));
    //        objFilCho.addChoosableFileFilter(new FileNameExtensionFilter("Archivos java", "java"));
    //        objFilCho.addChoosableFileFilter(new FileNameExtensionFilter("Archivos php", "php", "php4", "phtml"));
            if (objFilCho.showOpenDialog(this)==JFileChooser.APPROVE_OPTION)
            {
                strArc=objFilCho.getSelectedFile().getPath();
                //Si no tiene la extensi√≥n "txt" agregarsela.
    //            if (!strArc.toLowerCase().endsWith(".txt"))
    //                strArc+=".txt";

//                CarMaeVeh objCarMaeVeh=new CarMaeVeh();
//                dskGen.add(objCarMaeVeh, JLayeredPane.DEFAULT_LAYER);
//                objCarMaeVeh.setVisible(true);

                //abrirArcTex(strArc, ((MenArcBloNot)dskGen.getSelectedFrame()).txaPag);
                abrirArcXML(strArc);
                this.setTitle(strArc);
    //            System.out.println("Directorio seleccionado: " + strArc);
    //            System.out.println("Texto: " + ((ifrProPal)dskGen.getSelectedFrame()).txaPag.getText());
            }
            else
            {
                System.out.println("El usuario cancel√≥");
            }
        }
        catch(Exception e)
        {
            System.out.println("Excepci√≥n: " + e.toString());
            blnRes=false;
        }
        return blnRes;
    }
    
    private boolean abrirArcXML(String strNomArc)
    {
        boolean blnRes=true;
        try
        {
            DocumentBuilderFactory obDocBuiFac=DocumentBuilderFactory.newInstance();
            DocumentBuilder objDocBui=obDocBuiFac.newDocumentBuilder();
            Document objDoc=objDocBui.parse(new File(strNomArc));
            objDoc.getDocumentElement().normalize();
//            System.out.println("Nodo ra√≠z: " + objDoc.getDocumentElement().getNodeName());
            NodeList objNodLis=objDoc.getElementsByTagName("Perfume");
            for (int i=0; i<objNodLis.getLength(); i++)
            {
                Node objNodPel=objNodLis.item(i);
                if (objNodPel.getNodeType()==Node.ELEMENT_NODE)
                {
                    Element objEle=(Element)objNodPel;
                    txtNom.setText(getTagValue("Nombre", objEle));
                    txtMar.setText(getTagValue("Marca", objEle));
                    cboTip.setSelectedItem(getTagValue("Tipo", objEle));
                    switch (getTagValue("Fragancia", objEle))
                    {
                        case "Damas":
                            optFraDam.setSelected(true);
                            break;
                        case "Caballeros":
                            optFraCab.setSelected(true);
                            break;
                        case "Unisex":
                            optFraUni.setSelected(true);
                            break;
                    }
                    chkTam1Oz.setSelected(false);
                    chkTam2Oz.setSelected(false);
                    chkTam3Oz.setSelected(false);
                    if (getTagValue("Tamano", objEle).indexOf("1Oz")!=-1)
                    {
                        chkTam1Oz.setSelected(true);
                    }
                    if (getTagValue("Tamano", objEle).indexOf("2Oz")!=-1)
                    {
                        chkTam2Oz.setSelected(true);
                    }
                    if (getTagValue("Tamano", objEle).indexOf("3Oz")!=-1)
                    {
                        chkTam3Oz.setSelected(true);
                    }
                    txaObs.setText(getTagValue("Observaciones", objEle));
                }
            }
        }
        catch(Exception e)
        {
            System.out.println("Excepci√≥n: " + e.toString());
            blnRes=false;
        }
        return blnRes;
    }
    
    private static String getTagValue(String sTag, Element eElement)
    {
        NodeList nlList= eElement.getElementsByTagName(sTag).item(0).getChildNodes();
        Node nValue = (Node) nlList.item(0);
        if (nValue==null)
            return "";
        else
            return nValue.getNodeValue();
    }
    
}
